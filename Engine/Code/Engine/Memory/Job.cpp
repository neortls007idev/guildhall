#include "Engine/Memory/Job.hpp"

//--------------------------------------------------------------------------------------------------------------------------------------------

Job::Job()
{
	static int s_nextJob	= 1;
	
	m_jobID					= s_nextJob++;
}

//--------------------------------------------------------------------------------------------------------------------------------------------

Job::~Job()
{
	m_mutex.unlock();
}

//--------------------------------------------------------------------------------------------------------------------------------------------

bool Job::IsLocked()
{
	{
		if( m_mutex.try_lock() )
		{
			m_mutex.unlock();
			return false;
		}
		return true; // locked thus try_lock failed
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------

void Job::LockMutex()
{
	m_mutex.lock();
}

//--------------------------------------------------------------------------------------------------------------------------------------------

void Job::UnlockMutex()
{
	m_mutex.unlock();
}

//--------------------------------------------------------------------------------------------------------------------------------------------
